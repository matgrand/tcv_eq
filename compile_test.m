clc; clear all; close all;

% NOTE: for now only way is do this before running matlab:
% export LD_PRELOAD="/home/mg/libtorch/lib/libtorch_cpu.so:/home/mg/libtorch/lib/libtorch.so:/home/mg/libtorch/lib/libc10.so"
% export LD_PRELOAD="$(pwd)/libtorch/lib/libtorch_cpu.so:$(pwd)/libtorch/lib/libtorch.so:$(pwd)/libtorch/lib/libc10.so"

%% Compile the C++ MEX function
for i = 1:1000 fprintf('\n'); end
    delete('net_forward.mex*');
    try
    current_dir = pwd;
    libtorch_path = [current_dir '/libtorch'];
    mex('', ...
        'CXXFLAGS=$CXXFLAGS -std=c++17 -fPIC -O2', ...
        ['-I' libtorch_path '/include'], ...
        ['-I' libtorch_path '/include/torch/csrc/api/include'], ...
        ['-L' libtorch_path '/lib'], ...
        ['LDFLAGS=$LDFLAGS -Wl,-rpath,' libtorch_path '/lib'], ...
        '-ltorch', ...
        '-ltorch_cpu', ...
        '-lc10', ...
        'net_forward.cpp');
catch ME
    % If compilation fails, display the error message
    fprintf('Compilation failed: %s\n', ME.message);
end

run test_forward.m